# Here we create service-account/role and binding to access namespace and pods
# and Deployment uses the created service account
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: redis-pod-labeler
  name: redis-pod-labeler-service-account
  namespace: redis-trade-replication
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: redis-pod-labeler-role
  namespace: redis-trade-replication
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods"]
    verbs: ["get", "patch", "list"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: redis-pod-labeler-rolebinding
  namespace: redis-trade-replication
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redis-pod-labeler-role
subjects:
  - kind: ServiceAccount
    name: redis-pod-labeler-service-account
    namespace: redis-trade-replication
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: redis-pod-labeler
  name: redis-pod-labeler
  namespace: redis-trade-replication
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: redis-pod-labeler
  template:
    metadata:
      labels:
        app: redis-pod-labeler
    spec:
      containers:
        - name: redis-pod-labeler
          image: "globalmaksimum/redis-pod-labeler:0.3"
          args:
            - ./redis-labeler.py
            - --namespace=redis-trade-replication    # namespace which deployed redis
            - --pod-selector=app=redis-trade-replication #  key=value of to match and get the redis pods (here app=redis-ha)
            - --update-period=6   # how frequent labelling should happen( default to 60 seconds = 1 minute )
            - --redis-cluster-name=mymaster # redis cluster name
            - --redis-headless-svc-name=redis-trade-replication-headless # redis headless service name
            #- --verbose            # if u want to see more detailed output
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ps uaxw | egrep 'python' | grep -v 'grep'
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ps uaxw | egrep 'python' | grep -v 'grep'
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
      serviceAccountName: redis-pod-labeler-service-account
---
apiVersion: v1
kind: Service
metadata:
  name: redis-trade-replication-labeled
  namespace: redis-trade-replication
spec:
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      nodePort: 30482
  selector:
    redis.io/role: master
  type: NodePort